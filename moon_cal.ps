%!PS-Adobe-2.0
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Creator: calendar.cpp
%%Copyright: none
%%Title: Lunar calendar for YEAR
%%Version: none
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
#if portrait
%%Orientation: Portrait
#if landscape
%%Orientation: Landscape
#endif
%%EndComments
%%BeginDefaults
%%PageResources: font Times-Roman
%%EndDefaults

/Times-Roman findfont               % load the font, for instance, Courier
0 dict copy begin               % copy it to a new dictionary
/Encoding ISOLatin1Encoding def % replace encoding vector
/MyCourier /FontName def        % replace font name
currentdict end
dup /FID undef                  % remove internal data
/Latin1Times-Roman exch definefont pop  % define the new font

/font_size {
   /fontsize exch def
   /Latin1Times-Roman findfont fontsize scalefont setfont } def

/default_font_size  {
   16 font_size } def

default_font_size

/moon_r 18 def

% In portrait mode,  the days of the month have x-coordinate
% 'centerline' and y-coordinate 'topline'.  Day 1 <= N <= 31
% has y-coordinate topline - day * day_spacing.  Months have
% x-coordinates separated by 'month_spacing' increments from
% 'centerline' (see the 'set_month' function).
%   Let's put the centerline in the middle of an 8.5-inch wide
% page (close enough for A4).

/page_width 8.5 72 mul def    % 72 points/inch
/page_height 11 72 mul def
/centerline page_width 2 div def
/month_spacing 40 def
/topline 670 def
/day_spacing 40 def

/set_month {       % take month from 1 to 12 on stack
dup
7 lt { 1 sub } if    % month is now 0 to 5,  or 7 to 12
6 sub month_spacing mul
centerline add /xloc exch def
reset_yloc
} def

/reset_yloc {
   /yloc topline def
}     def

/next_day  {            % 'next day' : move yloc down for next day
/yloc yloc day_spacing sub def
} def

/set_loc {
#if portrait
xloc yloc
#if landscape
page_height yloc sub 10 add page_width xloc sub
#endif
} def

/ctr     {
set_loc moveto
} def

/show_days  {        % show days 1...31 on center
   /day_string 4 string def
   reset_yloc
   /xloc centerline def
   28 font_size
   1 1 31  {
   next_day
   day_string cvs ctr 0 -5 rmoveto centershow
   } for
   default_font_size
}    def

/xlate {
set_loc translate
}def

/leftmoon {
/phase exch def
/text exch def
next_day
gsave
   newpath
   xlate
   0 0 moon_r 90 270 arc
   phase 1 scale
   0 0 moon_r 270 90 arcn
   closepath
   gsave
     .7 setgray fill
   grestore
   stroke
grestore
ctr
text fit_to_label stroke
} def

/rightmoon {
/phase exch def
/text exch def
next_day
gsave
   newpath
   xlate
   0 0 moon_r 90 270 arcn
   phase 1 scale
   0 0 moon_r 270 90 arc
   closepath
   gsave
     .7 setgray fill
   grestore
   stroke
grestore
ctr
text fit_to_label stroke
} def

/centershow
{ dup stringwidth pop
 -0.5 mul 0
  rmoveto show } def

% Similar,  except fits to desired width

/fit_to_label  {      % takes text on the stack
   25 font_size
   dup stringwidth
   /textheight exch def
   /textwidth exch def
   dup length
   2 eq
   {              % it's a two-char string,  i.e.,  a weekday
      0 fontsize -.3 mul rmoveto
      textwidth -0.51 mul 0 rmoveto show
   }
   {
      /max_string_width 32 def
      /resize max_string_width textwidth div def
      gsave
      0 fontsize resize mul -.3 mul rmoveto
      currentpoint translate
      resize resize scale
      0 0 moveto
      centershow
      grestore
   } ifelse
} def

/show_pi  {    % either p (Mar 14) or ~p (Jun 28) on stack
   ctr 0 -10 rmoveto gsave
   /Symbol findfont 32 scalefont setfont centershow
   grestore
} def

/fullmoon  {  % string (usually full moon name) on stack
   next_day
   ctr fit_to_label
   default_font_size
   newpath
   set_loc moon_r 0 360 arc
   stroke
 } def

/two_strings  {   % font size and two strings on the stack
   font_size
   ctr 0 fontsize -.5 mul 4 sub rmoveto centershow
   ctr 0 fontsize  .5 mul 4 sub rmoveto centershow
   default_font_size
   stroke                     } def

/newmoon  {  % string (usually weekday) on stack
   next_day
   30 font_size
   ctr fit_to_label
   default_font_size
   0 20 360
      { /ang exch def newpath
      set_loc
      moon_r ang 10 add ang arcn stroke } for
   } def

/monthshow  {  % string (J, F, M,  etc.) on stack
   28 font_size
   ctr 0 -5 rmoveto    % nudge text down five points on page
   28 font_size centershow
   default_font_size
 } def

/yearshow {
   (YEAR)
#if landscape
   90 rotate
   /yeartextsize 95 def
   72 -200 moveto
   0 1 getinterval
   yeartextsize font_size centershow
   72 -280 moveto
   (YEAR) 1 1 getinterval
   yeartextsize font_size centershow
   72 -360 moveto
   (YEAR) 2 1 getinterval
   yeartextsize font_size centershow
   72 -440 moveto
   (YEAR) 3 1 getinterval
   yeartextsize font_size centershow
   -90 rotate
#if portrait
   310 700 moveto
   72 font_size centershow
#endif
   default_font_size
 } def

/logoshow  {
   14 font_size (https://www.projectpluto.com/moon_cal.htm) show stroke
} def

/sunday  {
1 0 0 setrgbcolor
} def

/holiday  {
0.3 0.5 0 setrgbcolor
} def

/birthday  {
0 0 0.8 setrgbcolor
} def

/def_day   {
0 setgray
} def

/show_calendar {
BREAK
} def

/bottom_margin 50 def
/left_margin 36 def
/height 700 def
/width 550 def

/set_clip_rect {
   newpath
   left_margin bottom_margin  moveto
   0 height rlineto
   width 0 rlineto
   0 height -1 mul rlineto
   closepath clip
   newpath } def

%%Page: 1 1
#if portrait
%%PageOrientation: Portrait
yearshow
set_clip_rect
#if landscape
%%PageOrientation: Landscape
yearshow
set_clip_rect
  90 rotate
  0 0 page_width sub translate
#endif
show_days
show_calendar
showpage

%%Page: 2 2
#if portrait
%%PageOrientation: Portrait
set_clip_rect
0 height translate
#if landscape
%%PageOrientation: Landscape
set_clip_rect
  90 rotate
  0 height sub
  0 page_width sub translate
#endif
/bottom_margin bottom_margin height sub def
show_days
show_calendar
#if portrait
72 -620 moveto logoshow
#if landscape
-90 rotate
-372 1422 moveto logoshow
#endif
showpage
